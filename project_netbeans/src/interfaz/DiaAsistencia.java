/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FraAsistencia.java
 *
 * Created on 18-nov-2011, 11:44:06
 */
package interfaz;

import java.awt.Color;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import logica.Asistente;
import logica.Conferencia;
import logica.Datosbd;
import logica.Evento;
import logica.Taller;

/**
 *
 * @author edward
 */
public class DiaAsistencia extends javax.swing.JDialog {
    private Datosbd bd;
    private Evento evento;
    private Asistente asistente;
       
    /** Creates new form FraAsistencia */
    
    public DiaAsistencia( JFrame parent, Datosbd bdx, Evento e) {
        super(parent);
        initComponents();
        this.setTitle( App.NAME );
        bd = bdx;
        evento = e;
        cargarListaInscripciones();
        asistente = null;
        
    }
    

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        txtGuardar = new javax.swing.JButton();
        txtImporte = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        chkCancelado = new javax.swing.JCheckBox();
        lblAviso = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cmbInscripciones = new javax.swing.JComboBox();
        txtDni = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        lblNombres = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        txtGuardar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtGuardar.setText("Guardar");
        txtGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGuardarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 66;
        gridBagConstraints.ipady = 21;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 0, 0, 0);
        jPanel1.add(txtGuardar, gridBagConstraints);

        txtImporte.setEditable(false);
        txtImporte.setFont(new java.awt.Font("Tahoma", 1, 18));
        txtImporte.setForeground(new java.awt.Color(204, 51, 0));
        txtImporte.setText("S/");
        txtImporte.setPreferredSize(new java.awt.Dimension(100, 30));
        txtImporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtImporteActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 0);
        jPanel1.add(txtImporte, gridBagConstraints);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14));
        jLabel8.setText("Importe :");
        jLabel8.setToolTipText("");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanel1.add(jLabel8, gridBagConstraints);

        chkCancelado.setBackground(new java.awt.Color(204, 255, 204));
        chkCancelado.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        chkCancelado.setText("Cancelado");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 0);
        jPanel1.add(chkCancelado, gridBagConstraints);

        lblAviso.setBackground(new java.awt.Color(204, 255, 204));
        lblAviso.setForeground(new java.awt.Color(51, 51, 51));
        lblAviso.setOpaque(true);
        lblAviso.setPreferredSize(new java.awt.Dimension(40, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel1.add(lblAviso, gridBagConstraints);

        jLabel2.setText("Inscripciones :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanel1.add(jLabel2, gridBagConstraints);

        cmbInscripciones.setPreferredSize(new java.awt.Dimension(250, 30));
        cmbInscripciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbInscripcionesActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 0);
        jPanel1.add(cmbInscripciones, gridBagConstraints);

        txtDni.setPreferredSize(new java.awt.Dimension(250, 30));
        txtDni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDniActionPerformed(evt);
            }
        });
        txtDni.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDniKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 0);
        jPanel1.add(txtDni, gridBagConstraints);

        jLabel1.setText("DNI:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(6, 10, 0, 0);
        jPanel1.add(jLabel1, gridBagConstraints);

        lblNombres.setFont(new java.awt.Font("Tahoma", 1, 12));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 0);
        jPanel1.add(lblNombres, gridBagConstraints);

        jLabel3.setText("Nombre Completo :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanel1.add(jLabel3, gridBagConstraints);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-478)/2, (screenSize.height-311)/2, 478, 311);
    }// </editor-fold>//GEN-END:initComponents

    private void cargarListaInscripciones(){
       
        try {
             
            List<Taller> talleres = bd.allTaller(evento) ;    
            List<Conferencia> conferencias = bd.allConferencias(evento) ;
            for( Object obj :talleres){ cmbInscripciones.addItem(obj);};
            for( Object obj :conferencias){ cmbInscripciones.addItem(obj); }
                         
        }catch (ClassNotFoundException ex) {
               JOptionPane.showMessageDialog(this,ex.getMessage(),
                       App.NAME , JOptionPane.INFORMATION_MESSAGE);
        }catch (SQLException ex){
             JOptionPane.showMessageDialog(this,ex.getMessage(),
                     App.NAME , JOptionPane.INFORMATION_MESSAGE);
        }
    }
    private void cargarImporte()
    {
        String tipo;
        
        if(asistente!= null){
         tipo = asistente.getTipo();
         
            if(tipo.equalsIgnoreCase("P"))
               txtImporte.setText(""+evento.getCostoProfesional());             
               else
               txtImporte.setText(""+ evento.getCostoEstudiante());
        }            
    }
    private void buscarAsistente ()
    {
         String dni = txtDni.getText();
        try {
            asistente = bd.indexOfAsistente(dni);
            if (asistente == null)
                lblAviso.setBackground(Color.red);
            else
                lblAviso.setBackground(Color.green);
        } catch (ClassNotFoundException ex) {
           JOptionPane.showMessageDialog(this,ex.getMessage(),
                       App.NAME , JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,ex.getMessage(),
                       App.NAME , JOptionPane.INFORMATION_MESSAGE);
        }
    }
    private void agregarConferencia(Object obj,int seleccion)
    {
        
            Conferencia conf = (Conferencia) obj;
            System.out.println("Conferencia");
            try {
                bd.addAsistenciaConferencia(asistente, conf, seleccion);
                JOptionPane.showMessageDialog(this,"Inscripcion Existosa",App.NAME 
                ,JOptionPane.INFORMATION_MESSAGE);
                this.dispose();
            } catch (ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(this,ex.getMessage(),
                 App.NAME , JOptionPane.INFORMATION_MESSAGE);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this,ex.getMessage(),
                       App.NAME , JOptionPane.INFORMATION_MESSAGE);
            }
    }
    private void agregarTaller (Object obj , int seleccion)
    {
        Taller taller = (Taller) obj;
            System.out.println("Taller");
            try {
                bd.addAsistenciaTaller(asistente, taller, seleccion);
                JOptionPane.showMessageDialog(this,"Inscripcion Existosa",App.NAME 
                    , JOptionPane.INFORMATION_MESSAGE);
                this.dispose();
            } catch (ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(this,ex.getMessage(),
                       App.NAME , JOptionPane.INFORMATION_MESSAGE);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this,ex.getMessage(),
                       App.NAME , JOptionPane.INFORMATION_MESSAGE);
            }
    }
    
    private void guardarAsistencia(){
        int seleccion; //check cacenlado 1 no cancelado 0
        Object  obj = cmbInscripciones.getSelectedItem();
        
        seleccion = (chkCancelado.isSelected()) ? 1:0;
        if( obj.getClass().getName().indexOf("Conferencia") != -1){
            agregarConferencia(obj, seleccion);
        }else{
            agregarTaller(obj, seleccion);
        }
    }
    private void ExportaNombres()
    {
        if( asistente != null){
            String nombrecompleto;
            nombrecompleto = asistente.getApellidos() + 
                             ", " + asistente.getNombres();
            lblNombres.setText(nombrecompleto);
        }else{
            lblNombres.setText("Registro no encontrado");
        }
    }
    private void txtImporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtImporteActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_txtImporteActionPerformed

    private void cmbInscripcionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbInscripcionesActionPerformed
        
}//GEN-LAST:event_cmbInscripcionesActionPerformed

    private void txtGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGuardarActionPerformed
        if(asistente != null)
        guardarAsistencia();
       
    }//GEN-LAST:event_txtGuardarActionPerformed

    private void txtDniKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDniKeyReleased
        buscarAsistente();
        cargarImporte();
         ExportaNombres();   
    }//GEN-LAST:event_txtDniKeyReleased

    private void txtDniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDniActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDniActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox chkCancelado;
    private javax.swing.JComboBox cmbInscripciones;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblAviso;
    private javax.swing.JLabel lblNombres;
    private javax.swing.JTextField txtDni;
    private javax.swing.JButton txtGuardar;
    private javax.swing.JTextField txtImporte;
    // End of variables declaration//GEN-END:variables
}
